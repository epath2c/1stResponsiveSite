@import url("https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap");

/* ! Scope style: means we can use it anywhere */
/* If we want to use a color five time, we'd better use custom properties */
:root {
  /* '--' is the syntax, the name followed. */
  --primary-color: #047aed;
}
* {
  box-sizing: border-box;
  /* *It allows us to use borders and padding and stuff without having to add to the width of one element  */
  padding: 0;
  margin: 0;
}
body {
  font-family: "Lato", sans-serif;
  color: #333;
  line-height: 1.6;
}

li {
  list-style: none;
}

a {
  text-decoration: none;
  color: #333;
}
h1,
h2 {
  font-weight: 300;
  line-height: 1.2;
  margin: 10px 0;
}

p {
  margin: 10px 0;
}
image {
  width: 100%;
  /* *This 100% width make the image not too large for the browser. */
}
/* !Navbar */
.navbar {
  background-color: var(--primary-color);
  color: #fff;
  height: 70px;
}
.navbar ul {
  display: flex;
}
.navbar a {
  color: #fff;
  padding: 10px;
  margin: 0 5px;
}
.navbar a:hover {
  border-bottom: 2px #fff solid;
}
.navbar .flex {
  justify-content: space-between;
  /* *If the flex is in the nav bar,then it should be between. */
  /* * other wise, for other items which need the class 'flex', they need space-center */
}
/* ! Showcase */
.showcase {
  height: 400px;
  background-color: var(--primary-color);
  color: #fff;
  position: relative;
}
.showcase h1 {
  font-size: 40px;
}
.showcase p {
  margin: 20px 0;
}
.showcase .grid {
  grid-template-columns: 1.3fr 1fr;
  gap: 30px;
  overflow: visible;
}
.showcase-form {
  position: relative;
  top: 60px;
  height: 350px;
  /* This will make a scroll bar. That need to be fiexed in the showcase gird, we add a overflow: visible there */
  width: 400px;
  padding: 40px;
  z-index: 100;
  justify-self: end;
}

.showcase-form .form-control {
  margin: 30px 0;
}
.showcase-form input[type="text"],
.showcase-form input[type="email"] {
  border: 0;
  border-bottom: 1px solid #b4becb;
  width: 100%;
  padding: 3px;
  font-size: 16px;
}
.showcase-form input:focus {
  outline: none;
}
/* ! Utilities */
/* Utilities is the class we use all around the website */
.container {
  max-width: 1100px;
  margin: 0 auto;
  overflow: auto;
  /* Get rid of the extra space */
  padding: 0 40px;
}

.card {
  background-color: #fff;
  color: #333;
  border-radius: 10px;
  box-shadow: 0 3px 10px rgb(0, 0, 0, 0.2);
  padding: 20px;
  margin: 10px;
}

.btn {
  display: inline-block;
  padding: 10px 30px;
  cursor: pointer;
  background-color: var(--primary-color);
  color: #fff;
  border: none;
  border-radius: 5px;
}

.btn-outline {
  background-color: transparent;
  border: 1px #fff solid;
}

.btn:hover {
  transform: scale(0.98);
}
.flex {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  /* *This 100% will make whatever height the container is */
}

.grid {
  display: grid;
  /* //grid-template-columns: 2fr 1fr; */
  /* Our grid system need the second line of code to be told to display things in colums. */
  /* And the direct child will be displayed as grids. In our case, we have one for text, one for form */
  /* If we have four direct children, the space will be 2 1 2 1 */
  grid-template-columns: repeat(2, 1fr);
  gap: 20px;
  /* This gap will make the whole grid system divide into two parts after the gap is decremented. */
  justify-content: center;
  align-items: center;
  height: 100%;
}
